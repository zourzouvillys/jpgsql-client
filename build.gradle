buildscript {
  repositories {
    mavenCentral()
  }
  configurations.classpath {
    resolutionStrategy.activateDependencyLocking()
  }
}

plugins {
  id 'net.ltgt.apt-eclipse' version '0.21'
  id "com.jfrog.bintray" version "1.8.5"
}

version = project.hasProperty('versionId') ? project.property('versionId') : 'master'
group = 'io.zrz.jpgsql'

apply plugin: 'java-library'
apply plugin: 'net.ltgt.apt'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'maven-publish'



repositories {
  mavenCentral()
  jcenter()
  maven { url "https://dl.bintray.com/zourzouvillys/maven" }
}


dependencyLocking {
    lockMode = LockMode.STRICT
    lockAllConfigurations()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {

  implementation enforcedPlatform('io.netty:netty-bom:4.1.52.Final')
  implementation 'io.netty:netty-buffer'
  implementation 'io.netty:netty-codec'
  implementation 'io.netty:netty-handler'
  implementation 'io.netty:netty-transport'

  // 
  annotationProcessor 'org.immutables:immutables:2.8.8'
  // annotationProcessor 'org.projectlombok:lombok:1.18.12'
  implementation 'org.projectlombok:lombok:1.18.12'

  compileOnly group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '2.2.600'
  compileOnly 'io.zrz:visitors:0.1'
  annotationProcessor 'io.zrz:visitors:0.1'

//
  api 'org.reactivestreams:reactive-streams:1.0.3'
  api 'org.slf4j:slf4j-api:1.7.30'

  implementation 'org.postgresql:postgresql:42.2.16'
  implementation 'com.google.guava:guava:29.0-jre'
  api 'io.reactivex.rxjava3:rxjava:3.0.6'
  implementation 'net.jodah:failsafe:1.0.4'

  testImplementation 'ch.qos.logback:logback-classic:1.2.3'
  testImplementation 'org.slf4j:jul-to-slf4j:1.7.30'

  testImplementation 'junit:junit:4.12'

}


task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}


publishing {
  publications {
    maven(MavenPublication) {
    	from components.java
      	groupId 'io.zrz.jpgsql'
      	artifactId 'jpgsql-client'
      	version project.version
    }
  }
}



eclipse {
}


// ----

bintray {
	user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
	key = project.hasProperty('bintray.key') ? project.property('bintray.key') : System.getenv('BINTRAY_APIKEY')
	configurations = ['archives']
	pkg {
	    repo = 'maven'
		name = 'jpgsql'
		userOrg = user
	}
}


publishing {
  publications {
    gpr(MavenPublication) {
      from(components.java)
    }
  }
}
