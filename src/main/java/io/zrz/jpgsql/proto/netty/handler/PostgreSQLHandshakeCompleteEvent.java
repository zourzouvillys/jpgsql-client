// Generated by delombok at Tue Sep 22 10:54:18 PDT 2020
package io.zrz.jpgsql.proto.netty.handler;

import java.util.Map;

import io.zrz.jpgsql.proto.wire.BackendKeyData;

public final class PostgreSQLHandshakeCompleteEvent {
  private final Map<String, String> parameters;
  private final BackendKeyData backendKey;

  @java.lang.SuppressWarnings("all")
  PostgreSQLHandshakeCompleteEvent(final Map<String, String> parameters, final BackendKeyData backendKey) {
    this.parameters = parameters;
    this.backendKey = backendKey;
  }


  @java.lang.SuppressWarnings("all")
  public static class PostgreSQLHandshakeCompleteEventBuilder {
    @java.lang.SuppressWarnings("all")
    private java.util.ArrayList<String> parameters$key;
    @java.lang.SuppressWarnings("all")
    private java.util.ArrayList<String> parameters$value;
    @java.lang.SuppressWarnings("all")
    private BackendKeyData backendKey;

    @java.lang.SuppressWarnings("all")
    PostgreSQLHandshakeCompleteEventBuilder() {
    }

    @java.lang.SuppressWarnings("all")
    public PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder parameter(final String parameterKey, final String parameterValue) {
      if (this.parameters$key == null) {
        this.parameters$key = new java.util.ArrayList<String>();
        this.parameters$value = new java.util.ArrayList<String>();
      }
      this.parameters$key.add(parameterKey);
      this.parameters$value.add(parameterValue);
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder parameters(final java.util.Map<? extends String, ? extends String> parameters) {
      if (parameters == null) {
        throw new java.lang.NullPointerException("parameters cannot be null");
      }
      if (this.parameters$key == null) {
        this.parameters$key = new java.util.ArrayList<String>();
        this.parameters$value = new java.util.ArrayList<String>();
      }
      for (final java.util.Map.Entry<? extends String, ? extends String> $lombokEntry : parameters.entrySet()) {
        this.parameters$key.add($lombokEntry.getKey());
        this.parameters$value.add($lombokEntry.getValue());
      }
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder clearParameters() {
      if (this.parameters$key != null) {
        this.parameters$key.clear();
        this.parameters$value.clear();
      }
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder backendKey(final BackendKeyData backendKey) {
      this.backendKey = backendKey;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public PostgreSQLHandshakeCompleteEvent build() {
      java.util.Map<String, String> parameters;
      switch (this.parameters$key == null ? 0 : this.parameters$key.size()) {
      case 0: 
        parameters = java.util.Collections.emptyMap();
        break;
      case 1: 
        parameters = java.util.Collections.singletonMap(this.parameters$key.get(0), this.parameters$value.get(0));
        break;
      default: 
        parameters = new java.util.LinkedHashMap<String, String>(this.parameters$key.size() < 1073741824 ? 1 + this.parameters$key.size() + (this.parameters$key.size() - 3) / 3 : java.lang.Integer.MAX_VALUE);
        for (int $i = 0; $i < this.parameters$key.size(); $i++) parameters.put(this.parameters$key.get($i), (String) this.parameters$value.get($i));
        parameters = java.util.Collections.unmodifiableMap(parameters);
      }
      return new PostgreSQLHandshakeCompleteEvent(parameters, this.backendKey);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder(parameters$key=" + this.parameters$key + ", parameters$value=" + this.parameters$value + ", backendKey=" + this.backendKey + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder builder() {
    return new PostgreSQLHandshakeCompleteEvent.PostgreSQLHandshakeCompleteEventBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, String> getParameters() {
    return this.parameters;
  }

  @java.lang.SuppressWarnings("all")
  public BackendKeyData getBackendKey() {
    return this.backendKey;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof PostgreSQLHandshakeCompleteEvent)) return false;
    final PostgreSQLHandshakeCompleteEvent other = (PostgreSQLHandshakeCompleteEvent) o;
    final java.lang.Object this$parameters = this.getParameters();
    final java.lang.Object other$parameters = other.getParameters();
    if (this$parameters == null ? other$parameters != null : !this$parameters.equals(other$parameters)) return false;
    final java.lang.Object this$backendKey = this.getBackendKey();
    final java.lang.Object other$backendKey = other.getBackendKey();
    if (this$backendKey == null ? other$backendKey != null : !this$backendKey.equals(other$backendKey)) return false;
    return true;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $parameters = this.getParameters();
    result = result * PRIME + ($parameters == null ? 43 : $parameters.hashCode());
    final java.lang.Object $backendKey = this.getBackendKey();
    result = result * PRIME + ($backendKey == null ? 43 : $backendKey.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "PostgreSQLHandshakeCompleteEvent(parameters=" + this.getParameters() + ", backendKey=" + this.getBackendKey() + ")";
  }
}
