// Generated by delombok at Tue Sep 22 10:54:18 PDT 2020
package io.zrz.jpgsql.proto.wire;

import java.util.List;

public final class CopyBothResponse implements PostgreSQLPacket {

  public static enum Format {
    Text, Binary, Unknown;
  }

  private final Format format;
  private final List<Integer> columns;

  @Override
  public <T> T apply(PostgreSQLPacketVisitor<T> visitor) {
    return visitor.visitCopyBothResponse(this);
  }


  @java.lang.SuppressWarnings("all")
  public static class CopyBothResponseBuilder {
    @java.lang.SuppressWarnings("all")
    private Format format;
    @java.lang.SuppressWarnings("all")
    private java.util.ArrayList<Integer> columns;

    @java.lang.SuppressWarnings("all")
    CopyBothResponseBuilder() {
    }

    @java.lang.SuppressWarnings("all")
    public CopyBothResponse.CopyBothResponseBuilder format(final Format format) {
      this.format = format;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public CopyBothResponse.CopyBothResponseBuilder column(final Integer column) {
      if (this.columns == null) this.columns = new java.util.ArrayList<Integer>();
      this.columns.add(column);
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public CopyBothResponse.CopyBothResponseBuilder columns(final java.util.Collection<? extends Integer> columns) {
      if (columns == null) {
        throw new java.lang.NullPointerException("columns cannot be null");
      }
      if (this.columns == null) this.columns = new java.util.ArrayList<Integer>();
      this.columns.addAll(columns);
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public CopyBothResponse.CopyBothResponseBuilder clearColumns() {
      if (this.columns != null) this.columns.clear();
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public CopyBothResponse build() {
      java.util.List<Integer> columns;
      switch (this.columns == null ? 0 : this.columns.size()) {
      case 0: 
        columns = java.util.Collections.emptyList();
        break;
      case 1: 
        columns = java.util.Collections.singletonList(this.columns.get(0));
        break;
      default: 
        columns = java.util.Collections.unmodifiableList(new java.util.ArrayList<Integer>(this.columns));
      }
      return new CopyBothResponse(this.format, columns);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "CopyBothResponse.CopyBothResponseBuilder(format=" + this.format + ", columns=" + this.columns + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static CopyBothResponse.CopyBothResponseBuilder builder() {
    return new CopyBothResponse.CopyBothResponseBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public Format getFormat() {
    return this.format;
  }

  @java.lang.SuppressWarnings("all")
  public List<Integer> getColumns() {
    return this.columns;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof CopyBothResponse)) return false;
    final CopyBothResponse other = (CopyBothResponse) o;
    final java.lang.Object this$format = this.getFormat();
    final java.lang.Object other$format = other.getFormat();
    if (this$format == null ? other$format != null : !this$format.equals(other$format)) return false;
    final java.lang.Object this$columns = this.getColumns();
    final java.lang.Object other$columns = other.getColumns();
    if (this$columns == null ? other$columns != null : !this$columns.equals(other$columns)) return false;
    return true;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $format = this.getFormat();
    result = result * PRIME + ($format == null ? 43 : $format.hashCode());
    final java.lang.Object $columns = this.getColumns();
    result = result * PRIME + ($columns == null ? 43 : $columns.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "CopyBothResponse(format=" + this.getFormat() + ", columns=" + this.getColumns() + ")";
  }

  @java.lang.SuppressWarnings("all")
  public CopyBothResponse(final Format format, final List<Integer> columns) {
    this.format = format;
    this.columns = columns;
  }
}
