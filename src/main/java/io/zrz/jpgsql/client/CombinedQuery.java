// Generated by delombok at Tue Sep 22 10:54:18 PDT 2020
package io.zrz.jpgsql.client;

import java.util.List;
import java.util.stream.Collectors;

/**
 * multiple queries to be sent for processing together.
 */
public class CombinedQuery implements Query {
  private final List<SimpleQuery> queries;
  private final int params;

  public CombinedQuery(List<SimpleQuery> queries) {
    this.queries = queries;
    this.params = queries.stream().mapToInt(q -> q.parameterCount()).sum();
  }

  @Override
  public List<SimpleQuery> getSubqueries() {
    return this.queries;
  }

  @Override
  public int parameterCount() {
    return this.params;
  }

  public String toString() {
    return this.queries.stream().map(t -> t.sql()).collect(Collectors.joining(";\n"));
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof CombinedQuery)) return false;
    final CombinedQuery other = (CombinedQuery) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    final java.lang.Object this$queries = this.queries;
    final java.lang.Object other$queries = other.queries;
    if (this$queries == null ? other$queries != null : !this$queries.equals(other$queries)) return false;
    if (this.params != other.params) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof CombinedQuery;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $queries = this.queries;
    result = result * PRIME + ($queries == null ? 43 : $queries.hashCode());
    result = result * PRIME + this.params;
    return result;
  }
}
